@page "/editcategory/{catId:int}"  
@inject IEditCategoryUseCase EditCategoryUseCase 
@inject IViewCategoryByIdUseCase ViewCategoryByIdUseCase
@inject NavigationManager NavigationManager

<h3>Category Edit</h3>
<br/>
<EditForm  model ="category" OnValidSubmit="SaveCategory">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>

	<div class="form-group">
		<label for="name">Category Name</label>
		<InputText id="name"
			@bind-Value="category.Name"
			class="form-control">
		</InputText>
	</div>
    <div class="form-group">
		<label for="description">Description</label>
		<InputText id="description"
			@bind-Value="category.Description"
			class="form-control">
		</InputText>
	</div>
	<div class="form-group">
		<label for="image">Images</label>
		<div>
			<img src="@category.Image" style="width:250px; height: 250px;"/>
		</div>
		<InputFile OnChange="@OnInputFileChange" class="form-control"></InputFile>
	</div>
	<br/>
	<button type="submit" class="btn btn-primary">Save</button>
	<button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
</EditForm>

@code {
	[Parameter]
	public int CatId{ get; set; }

	private Category category = new Category();
	protected override async Task OnParametersSetAsync()
	{
		this.category = await ViewCategoryByIdUseCase.ExcuteAsync(this.CatId);
	}
	private async Task SaveCategory()
	{
		await EditCategoryUseCase.ExcuteAsync(this.category);
		NavigationManager.NavigateTo("/categories");
	}
	private void OnCancel()
	{
		NavigationManager.NavigateTo("/categories");
	}
    private async Task OnInputFileChange(InputFileChangeEventArgs inputFileChangeEventArgs)
	{
		var fileFormat = "image/png";
		// get file
		var imageFile = await inputFileChangeEventArgs.File.RequestImageFileAsync(fileFormat, 1920, 1920);
		// convert file into a byte array
		var buffer = new byte[imageFile.Size];
		await imageFile.OpenReadStream().ReadAsync(buffer);
		// convert byte array into a base 64 string
		string imageDataUrl = $"data:{fileFormat};base64,{Convert.ToBase64String(buffer)}";
		category.Image = imageDataUrl;
	}
}
